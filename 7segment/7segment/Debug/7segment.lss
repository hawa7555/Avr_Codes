
7segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000122  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000122  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001aa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000218  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006e6  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005e9  00000000  00000000  0000091e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a4  00000000  00000000  00000f07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000011ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000338  00000000  00000000  000011e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001bb  00000000  00000000  00001518  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000016d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e2       	ldi	r30, 0x22	; 34
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#define F_CPU 8000000UL
#include<avr/io.h>
#include<util/delay.h>

void main()
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	64 97       	sbiw	r28, 0x14	; 20
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	DDRA=0xFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xFF;
  9a:	87 bb       	out	0x17, r24	; 23
	char x[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
  9c:	8a e0       	ldi	r24, 0x0A	; 10
  9e:	e0 e6       	ldi	r30, 0x60	; 96
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	de 01       	movw	r26, r28
  a4:	11 96       	adiw	r26, 0x01	; 1
  a6:	01 90       	ld	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	8a 95       	dec	r24
  ac:	e1 f7       	brne	.-8      	; 0xa6 <main+0x24>
	char a[10]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90}; 
  ae:	8a e0       	ldi	r24, 0x0A	; 10
  b0:	ea e6       	ldi	r30, 0x6A	; 106
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	de 01       	movw	r26, r28
  b6:	1b 96       	adiw	r26, 0x0b	; 11
  b8:	01 90       	ld	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	8a 95       	dec	r24
  be:	e1 f7       	brne	.-8      	; 0xb8 <main+0x36>
  c0:	be 01       	movw	r22, r28
  c2:	6b 5e       	subi	r22, 0xEB	; 235
  c4:	7f 4f       	sbci	r23, 0xFF	; 255
  c6:	ae 01       	movw	r20, r28
  c8:	45 5f       	subi	r20, 0xF5	; 245
  ca:	5f 4f       	sbci	r21, 0xFF	; 255
		//PORTB=0b
		for(int j=0;j<10;j++)
		{
		 for(int k=0;k<100;k++)
		 {
	     PORTB=0b00000011;
  cc:	33 e0       	ldi	r19, 0x03	; 3
  ce:	8e 01       	movw	r16, r28
  d0:	05 5f       	subi	r16, 0xF5	; 245
  d2:	1f 4f       	sbci	r17, 0xFF	; 255
  d4:	21 c0       	rjmp	.+66     	; 0x118 <main+0x96>
  d6:	38 bb       	out	0x18, r19	; 24
		 PORTA=a[i];
  d8:	d8 01       	movw	r26, r16
  da:	2c 91       	ld	r18, X
  dc:	2b bb       	out	0x1b, r18	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	af e0       	ldi	r26, 0x0F	; 15
  e0:	b7 e2       	ldi	r27, 0x27	; 39
  e2:	11 97       	sbiw	r26, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <main+0x60>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x66>
  e8:	00 00       	nop
		 _delay_ms(5);
		 PORTB=0b00000000;
  ea:	18 ba       	out	0x18, r1	; 24
		 PORTA=x[j];
  ec:	20 81       	ld	r18, Z
  ee:	2b bb       	out	0x1b, r18	; 27
  f0:	af e0       	ldi	r26, 0x0F	; 15
  f2:	b7 e2       	ldi	r27, 0x27	; 39
  f4:	11 97       	sbiw	r26, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <main+0x72>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x78>
  fa:	00 00       	nop
  fc:	01 97       	sbiw	r24, 0x01	; 1
	   for(int i=0;i<10;i++)
	 {
		//PORTB=0b
		for(int j=0;j<10;j++)
		{
		 for(int k=0;k<100;k++)
  fe:	59 f7       	brne	.-42     	; 0xd6 <main+0x54>
 100:	31 96       	adiw	r30, 0x01	; 1
	 while(1)
	 {
	   for(int i=0;i<10;i++)
	 {
		//PORTB=0b
		for(int j=0;j<10;j++)
 102:	4e 17       	cp	r20, r30
 104:	5f 07       	cpc	r21, r31
 106:	19 f0       	breq	.+6      	; 0x10e <main+0x8c>
#define F_CPU 8000000UL
#include<avr/io.h>
#include<util/delay.h>

void main()
{
 108:	84 e6       	ldi	r24, 0x64	; 100
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	e4 cf       	rjmp	.-56     	; 0xd6 <main+0x54>
 10e:	0f 5f       	subi	r16, 0xFF	; 255
 110:	1f 4f       	sbci	r17, 0xFF	; 255
	DDRB=0xFF;
	char x[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
	char a[10]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90}; 
	 while(1)
	 {
	   for(int i=0;i<10;i++)
 112:	60 17       	cp	r22, r16
 114:	71 07       	cpc	r23, r17
 116:	d9 f2       	breq	.-74     	; 0xce <main+0x4c>
 118:	fe 01       	movw	r30, r28
 11a:	31 96       	adiw	r30, 0x01	; 1
 11c:	f5 cf       	rjmp	.-22     	; 0x108 <main+0x86>

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
