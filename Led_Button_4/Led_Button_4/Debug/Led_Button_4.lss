
Led_Button_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000f8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000128  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000164  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005b1  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000539  00000000  00000000  00000735  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f0  00000000  00000000  00000c6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000e60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ec  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001170  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>
void main()
{
  DDRA=DDRA|(0x0F);
  6c:	8a b3       	in	r24, 0x1a	; 26
  6e:	8f 60       	ori	r24, 0x0F	; 15
  70:	8a bb       	out	0x1a, r24	; 26
  DDRC=DDRC&~(0x0F);
  72:	84 b3       	in	r24, 0x14	; 20
  74:	80 7f       	andi	r24, 0xF0	; 240
  76:	84 bb       	out	0x14, r24	; 20
 while(1)
{
  if(PINC&(1<<0))
  78:	98 9b       	sbis	0x13, 0	; 19
  7a:	02 c0       	rjmp	.+4      	; 0x80 <main+0x14>
  { 
	PORTA=PORTA|(1<<0);
  7c:	d8 9a       	sbi	0x1b, 0	; 27
  7e:	fc cf       	rjmp	.-8      	; 0x78 <main+0xc>
  }
  else if(PINC&(1<<1))
  80:	99 9b       	sbis	0x13, 1	; 19
  82:	02 c0       	rjmp	.+4      	; 0x88 <main+0x1c>
  {
	  PORTA=PORTA|(1<<1);
  84:	d9 9a       	sbi	0x1b, 1	; 27
  86:	f8 cf       	rjmp	.-16     	; 0x78 <main+0xc>
  }
  else if(PINC&(1<<2))
  88:	9a 9b       	sbis	0x13, 2	; 19
  8a:	02 c0       	rjmp	.+4      	; 0x90 <main+0x24>
  {
	  PORTA=PORTA|(1<<2);
  8c:	da 9a       	sbi	0x1b, 2	; 27
  8e:	f4 cf       	rjmp	.-24     	; 0x78 <main+0xc>
  }
  else if(PINC&(1<<3))
  90:	9b 9b       	sbis	0x13, 3	; 19
  92:	02 c0       	rjmp	.+4      	; 0x98 <main+0x2c>
  {
	  PORTA=PORTA|(1<<3);
  94:	db 9a       	sbi	0x1b, 3	; 27
  96:	f0 cf       	rjmp	.-32     	; 0x78 <main+0xc>
  }
  else
   {
	  PORTA=PORTA&~(0x0F);
  98:	8b b3       	in	r24, 0x1b	; 27
  9a:	80 7f       	andi	r24, 0xF0	; 240
  9c:	8b bb       	out	0x1b, r24	; 27
  9e:	ec cf       	rjmp	.-40     	; 0x78 <main+0xc>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>
