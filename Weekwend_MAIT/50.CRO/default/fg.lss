
fg.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000042  00000000  00000000  0000011e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000118  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000ba  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000010e  00000000  00000000  00000332  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000050  00000000  00000000  00000440  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000a2  00000000  00000000  00000490  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
{
 OCR0=x;
}
void adc_init()
{
  DDRA=DDRA&~(1<<0);
  6c:	d0 98       	cbi	0x1a, 0	; 26
  ADMUX=0xC0;//Vref=2.56V
  6e:	80 ec       	ldi	r24, 0xC0	; 192
  70:	87 b9       	out	0x07, r24	; 7
  //ADMUX=0x00;//Aref
  ADCSRA=0xA7;
  72:	87 ea       	ldi	r24, 0xA7	; 167
  74:	86 b9       	out	0x06, r24	; 6
	send2ocr(ADC);
  }
}
void pwm_init()
{
    DDRB=DDRB|(1<<PB3);
  76:	bb 9a       	sbi	0x17, 3	; 23
  	TCNT0=0;
  78:	12 be       	out	0x32, r1	; 50
  	TCCR0=0x69;
  7a:	89 e6       	ldi	r24, 0x69	; 105
  7c:	83 bf       	out	0x33, r24	; 51
{
  adc_init();
  pwm_init();
  while(1)
  {
    ADCSRA=ADCSRA|(1<<ADSC);
  7e:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA&(1<ADIF))==0);
  80:	30 9b       	sbis	0x06, 0	; 6
  82:	fe cf       	rjmp	.-4      	; 0x80 <main+0x14>
	send2ocr(ADC);
  84:	84 b1       	in	r24, 0x04	; 4
  86:	95 b1       	in	r25, 0x05	; 5
  	TCNT0=0;
  	TCCR0=0x69;
}
void send2ocr(int x)
{
 OCR0=x;
  88:	8c bf       	out	0x3c, r24	; 60
  8a:	f9 cf       	rjmp	.-14     	; 0x7e <main+0x12>

0000008c <pwm_init>:
	send2ocr(ADC);
  }
}
void pwm_init()
{
    DDRB=DDRB|(1<<PB3);
  8c:	bb 9a       	sbi	0x17, 3	; 23
  	TCNT0=0;
  8e:	12 be       	out	0x32, r1	; 50
  	TCCR0=0x69;
  90:	89 e6       	ldi	r24, 0x69	; 105
  92:	83 bf       	out	0x33, r24	; 51
}
  94:	08 95       	ret

00000096 <send2ocr>:
void send2ocr(int x)
{
 OCR0=x;
  96:	8c bf       	out	0x3c, r24	; 60
}
  98:	08 95       	ret

0000009a <adc_init>:
void adc_init()
{
  DDRA=DDRA&~(1<<0);
  9a:	d0 98       	cbi	0x1a, 0	; 26
  ADMUX=0xC0;//Vref=2.56V
  9c:	80 ec       	ldi	r24, 0xC0	; 192
  9e:	87 b9       	out	0x07, r24	; 7
  //ADMUX=0x00;//Aref
  ADCSRA=0xA7;
  a0:	87 ea       	ldi	r24, 0xA7	; 167
  a2:	86 b9       	out	0x06, r24	; 6
  //ADCSRA=0x87;
}
  a4:	08 95       	ret

000000a6 <_exit>:
  a6:	f8 94       	cli

000000a8 <__stop_program>:
  a8:	ff cf       	rjmp	.-2      	; 0xa8 <__stop_program>
