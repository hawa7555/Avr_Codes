
led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000182  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000312  00000000  00000000  0000019d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e8  00000000  00000000  000004af  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000282  00000000  00000000  00000597  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  0000081c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000e5  00000000  00000000  0000083c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001a0  00000000  00000000  00000921  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00000ac1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#define F_CPU 8000000UL
#include<avr/io.h>
#include<util/delay.h>
int main()
{
  6c:	0f 93       	push	r16
  6e:	1f 93       	push	r17
  DDRA=0b11111111;
  70:	8f ef       	ldi	r24, 0xFF	; 255
  72:	8a bb       	out	0x1a, r24	; 26
  while(1)
  {
    PORTA=0b00000001;//0x01//1//(1<<0)
  74:	01 e0       	ldi	r16, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  76:	28 ec       	ldi	r18, 0xC8	; 200
  78:	30 e0       	ldi	r19, 0x00	; 0
	_delay_ms(100);
	PORTA=0b00000010;//0x02//2//(1<<1)
  7a:	12 e0       	ldi	r17, 0x02	; 2
	_delay_ms(100);
	PORTA=0b00000100;//0x04//4//(1<<2)
  7c:	b4 e0       	ldi	r27, 0x04	; 4
	_delay_ms(100);
	PORTA=0b00001000;//0x08//8//(1<<3)
  7e:	a8 e0       	ldi	r26, 0x08	; 8
	_delay_ms(100);
	PORTA=0b00010000;//0x010//16//(1<<4)
  80:	70 e1       	ldi	r23, 0x10	; 16
	_delay_ms(100);
	PORTA=0b00100000;//0x20//32//(1<<5)
  82:	60 e2       	ldi	r22, 0x20	; 32
	_delay_ms(100);
	PORTA=0b01000000;//0x40//64//(1<<6)
  84:	50 e4       	ldi	r21, 0x40	; 64
	_delay_ms(100);
	PORTA=0b10000000;//0x80//128//(1<<7)
  86:	40 e8       	ldi	r20, 0x80	; 128
int main()
{
  DDRA=0b11111111;
  while(1)
  {
    PORTA=0b00000001;//0x01//1//(1<<0)
  88:	0b bb       	out	0x1b, r16	; 27
  8a:	88 ee       	ldi	r24, 0xE8	; 232
  8c:	93 e0       	ldi	r25, 0x03	; 3
  8e:	f9 01       	movw	r30, r18
  90:	31 97       	sbiw	r30, 0x01	; 1
  92:	f1 f7       	brne	.-4      	; 0x90 <main+0x24>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  94:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  96:	d9 f7       	brne	.-10     	; 0x8e <main+0x22>
	_delay_ms(100);
	PORTA=0b00000010;//0x02//2//(1<<1)
  98:	1b bb       	out	0x1b, r17	; 27
  9a:	88 ee       	ldi	r24, 0xE8	; 232
  9c:	93 e0       	ldi	r25, 0x03	; 3
  9e:	f9 01       	movw	r30, r18
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <main+0x34>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  a4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  a6:	d9 f7       	brne	.-10     	; 0x9e <main+0x32>
	_delay_ms(100);
	PORTA=0b00000100;//0x04//4//(1<<2)
  a8:	bb bb       	out	0x1b, r27	; 27
  aa:	88 ee       	ldi	r24, 0xE8	; 232
  ac:	93 e0       	ldi	r25, 0x03	; 3
  ae:	f9 01       	movw	r30, r18
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <main+0x44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  b4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  b6:	d9 f7       	brne	.-10     	; 0xae <main+0x42>
	_delay_ms(100);
	PORTA=0b00001000;//0x08//8//(1<<3)
  b8:	ab bb       	out	0x1b, r26	; 27
  ba:	88 ee       	ldi	r24, 0xE8	; 232
  bc:	93 e0       	ldi	r25, 0x03	; 3
  be:	f9 01       	movw	r30, r18
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x54>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  c6:	d9 f7       	brne	.-10     	; 0xbe <main+0x52>
	_delay_ms(100);
	PORTA=0b00010000;//0x010//16//(1<<4)
  c8:	7b bb       	out	0x1b, r23	; 27
  ca:	88 ee       	ldi	r24, 0xE8	; 232
  cc:	93 e0       	ldi	r25, 0x03	; 3
  ce:	f9 01       	movw	r30, r18
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x64>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  d6:	d9 f7       	brne	.-10     	; 0xce <main+0x62>
	_delay_ms(100);
	PORTA=0b00100000;//0x20//32//(1<<5)
  d8:	6b bb       	out	0x1b, r22	; 27
  da:	88 ee       	ldi	r24, 0xE8	; 232
  dc:	93 e0       	ldi	r25, 0x03	; 3
  de:	f9 01       	movw	r30, r18
  e0:	31 97       	sbiw	r30, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x74>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  e4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  e6:	d9 f7       	brne	.-10     	; 0xde <main+0x72>
	_delay_ms(100);
	PORTA=0b01000000;//0x40//64//(1<<6)
  e8:	5b bb       	out	0x1b, r21	; 27
  ea:	88 ee       	ldi	r24, 0xE8	; 232
  ec:	93 e0       	ldi	r25, 0x03	; 3
  ee:	f9 01       	movw	r30, r18
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x84>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  f4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  f6:	d9 f7       	brne	.-10     	; 0xee <main+0x82>
	_delay_ms(100);
	PORTA=0b10000000;//0x80//128//(1<<7)
  f8:	4b bb       	out	0x1b, r20	; 27
  fa:	88 ee       	ldi	r24, 0xE8	; 232
  fc:	93 e0       	ldi	r25, 0x03	; 3
  fe:	f9 01       	movw	r30, r18
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x94>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 104:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 106:	d9 f7       	brne	.-10     	; 0xfe <main+0x92>
 108:	bf cf       	rjmp	.-130    	; 0x88 <main+0x1c>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
