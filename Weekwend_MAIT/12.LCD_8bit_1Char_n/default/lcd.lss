
lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000027c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000055  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000008f9  00000000  00000000  00000345  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000126  00000000  00000000  00000c3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000589  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000060  00000000  00000000  000012f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000102  00000000  00000000  00001350  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000002f6  00000000  00000000  00001452  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 21 01 	call	0x242	; 0x242 <main>
  64:	0c 94 3c 01 	jmp	0x278	; 0x278 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <lcd_display>:
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
  6c:	87 e4       	ldi	r24, 0x47	; 71
  6e:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
  70:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
  72:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
  74:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
  76:	c2 98       	cbi	0x18, 2	; 24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  78:	80 ed       	ldi	r24, 0xD0	; 208
  7a:	97 e0       	ldi	r25, 0x07	; 7
  7c:	01 97       	sbiw	r24, 0x01	; 1
  7e:	f1 f7       	brne	.-4      	; 0x7c <lcd_display+0x10>
  80:	88 ee       	ldi	r24, 0xE8	; 232
  82:	93 e0       	ldi	r25, 0x03	; 3
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  84:	28 ec       	ldi	r18, 0xC8	; 200
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	f9 01       	movw	r30, r18
  8a:	31 97       	sbiw	r30, 0x01	; 1
  8c:	f1 f7       	brne	.-4      	; 0x8a <lcd_display+0x1e>
  8e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  90:	d9 f7       	brne	.-10     	; 0x88 <lcd_display+0x1c>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
  92:	8f e4       	ldi	r24, 0x4F	; 79
  94:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
  96:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
  98:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
  9a:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
  9c:	c2 98       	cbi	0x18, 2	; 24
  9e:	80 ed       	ldi	r24, 0xD0	; 208
  a0:	97 e0       	ldi	r25, 0x07	; 7
  a2:	01 97       	sbiw	r24, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <lcd_display+0x36>
  a6:	88 ee       	ldi	r24, 0xE8	; 232
  a8:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  aa:	28 ec       	ldi	r18, 0xC8	; 200
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	f9 01       	movw	r30, r18
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <lcd_display+0x44>
  b4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  b6:	d9 f7       	brne	.-10     	; 0xae <lcd_display+0x42>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
  b8:	84 e4       	ldi	r24, 0x44	; 68
  ba:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
  bc:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
  be:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
  c0:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
  c2:	c2 98       	cbi	0x18, 2	; 24
  c4:	80 ed       	ldi	r24, 0xD0	; 208
  c6:	97 e0       	ldi	r25, 0x07	; 7
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <lcd_display+0x5c>
  cc:	88 ee       	ldi	r24, 0xE8	; 232
  ce:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d0:	28 ec       	ldi	r18, 0xC8	; 200
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	f9 01       	movw	r30, r18
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <lcd_display+0x6a>
  da:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  dc:	d9 f7       	brne	.-10     	; 0xd4 <lcd_display+0x68>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
  de:	80 e2       	ldi	r24, 0x20	; 32
  e0:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
  e2:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
  e4:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
  e6:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
  e8:	c2 98       	cbi	0x18, 2	; 24
  ea:	80 ed       	ldi	r24, 0xD0	; 208
  ec:	97 e0       	ldi	r25, 0x07	; 7
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <lcd_display+0x82>
  f2:	88 ee       	ldi	r24, 0xE8	; 232
  f4:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  f6:	28 ec       	ldi	r18, 0xC8	; 200
  f8:	30 e0       	ldi	r19, 0x00	; 0
  fa:	f9 01       	movw	r30, r18
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <lcd_display+0x90>
 100:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 102:	d9 f7       	brne	.-10     	; 0xfa <lcd_display+0x8e>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
 104:	89 e4       	ldi	r24, 0x49	; 73
 106:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
 108:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 10a:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 10c:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 10e:	c2 98       	cbi	0x18, 2	; 24
 110:	80 ed       	ldi	r24, 0xD0	; 208
 112:	97 e0       	ldi	r25, 0x07	; 7
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <lcd_display+0xa8>
 118:	88 ee       	ldi	r24, 0xE8	; 232
 11a:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 11c:	28 ec       	ldi	r18, 0xC8	; 200
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	f9 01       	movw	r30, r18
 122:	31 97       	sbiw	r30, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <lcd_display+0xb6>
 126:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 128:	d9 f7       	brne	.-10     	; 0x120 <lcd_display+0xb4>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
 12a:	83 e5       	ldi	r24, 0x53	; 83
 12c:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
 12e:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 130:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 132:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 134:	c2 98       	cbi	0x18, 2	; 24
 136:	80 ed       	ldi	r24, 0xD0	; 208
 138:	97 e0       	ldi	r25, 0x07	; 7
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <lcd_display+0xce>
 13e:	88 ee       	ldi	r24, 0xE8	; 232
 140:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 142:	28 ec       	ldi	r18, 0xC8	; 200
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	f9 01       	movw	r30, r18
 148:	31 97       	sbiw	r30, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <lcd_display+0xdc>
 14c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 14e:	d9 f7       	brne	.-10     	; 0x146 <lcd_display+0xda>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
 150:	80 e2       	ldi	r24, 0x20	; 32
 152:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
 154:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 156:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 158:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 15a:	c2 98       	cbi	0x18, 2	; 24
 15c:	80 ed       	ldi	r24, 0xD0	; 208
 15e:	97 e0       	ldi	r25, 0x07	; 7
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <lcd_display+0xf4>
 164:	88 ee       	ldi	r24, 0xE8	; 232
 166:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 168:	28 ec       	ldi	r18, 0xC8	; 200
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	f9 01       	movw	r30, r18
 16e:	31 97       	sbiw	r30, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <lcd_display+0x102>
 172:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 174:	d9 f7       	brne	.-10     	; 0x16c <lcd_display+0x100>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
 176:	8f e4       	ldi	r24, 0x4F	; 79
 178:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
 17a:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 17c:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 17e:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 180:	c2 98       	cbi	0x18, 2	; 24
 182:	80 ed       	ldi	r24, 0xD0	; 208
 184:	97 e0       	ldi	r25, 0x07	; 7
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <lcd_display+0x11a>
 18a:	88 ee       	ldi	r24, 0xE8	; 232
 18c:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 18e:	28 ec       	ldi	r18, 0xC8	; 200
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	f9 01       	movw	r30, r18
 194:	31 97       	sbiw	r30, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <lcd_display+0x128>
 198:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 19a:	d9 f7       	brne	.-10     	; 0x192 <lcd_display+0x126>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
 19c:	8e e4       	ldi	r24, 0x4E	; 78
 19e:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
 1a0:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 1a2:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 1a4:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 1a6:	c2 98       	cbi	0x18, 2	; 24
 1a8:	80 ed       	ldi	r24, 0xD0	; 208
 1aa:	97 e0       	ldi	r25, 0x07	; 7
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <lcd_display+0x140>
 1b0:	88 ee       	ldi	r24, 0xE8	; 232
 1b2:	93 e0       	ldi	r25, 0x03	; 3
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1b4:	28 ec       	ldi	r18, 0xC8	; 200
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	f9 01       	movw	r30, r18
 1ba:	31 97       	sbiw	r30, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <lcd_display+0x14e>
 1be:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1c0:	d9 f7       	brne	.-10     	; 0x1b8 <lcd_display+0x14c>
 PORTB=PORTB&~(1<<2);//EN=0;
 _delay_ms(1);
}
void lcd_data(char x)
{
 PORTA=x;
 1c2:	85 e4       	ldi	r24, 0x45	; 69
 1c4:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
 1c6:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 1c8:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 1ca:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 1cc:	c2 98       	cbi	0x18, 2	; 24
 1ce:	80 ed       	ldi	r24, 0xD0	; 208
 1d0:	97 e0       	ldi	r25, 0x07	; 7
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <lcd_display+0x166>
  lcd_data('O');
  _delay_ms(100);
  lcd_data('N');
  _delay_ms(100);
   lcd_data('E');
}
 1d6:	08 95       	ret

000001d8 <lcd_init>:
void lcd_init()
{
    DDRA=0xff;
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	8a bb       	out	0x1a, r24	; 26
	DDRB=DDRB|7;
 1dc:	87 b3       	in	r24, 0x17	; 23
 1de:	87 60       	ori	r24, 0x07	; 7
 1e0:	87 bb       	out	0x17, r24	; 23
	lcd_command(0x80);
}

void lcd_command(char x)
{
 PORTA=x;
 1e2:	88 e3       	ldi	r24, 0x38	; 56
 1e4:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB&~(1<<0);//RS=0;
 1e6:	c0 98       	cbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 1e8:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 1ea:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 1ec:	c2 98       	cbi	0x18, 2	; 24
 1ee:	20 ed       	ldi	r18, 0xD0	; 208
 1f0:	37 e0       	ldi	r19, 0x07	; 7
 1f2:	c9 01       	movw	r24, r18
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <lcd_init+0x1c>
	lcd_command(0x80);
}

void lcd_command(char x)
{
 PORTA=x;
 1f8:	86 e0       	ldi	r24, 0x06	; 6
 1fa:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB&~(1<<0);//RS=0;
 1fc:	c0 98       	cbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 1fe:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 200:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 202:	c2 98       	cbi	0x18, 2	; 24
 204:	c9 01       	movw	r24, r18
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <lcd_init+0x2e>
	lcd_command(0x80);
}

void lcd_command(char x)
{
 PORTA=x;
 20a:	8e e0       	ldi	r24, 0x0E	; 14
 20c:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB&~(1<<0);//RS=0;
 20e:	c0 98       	cbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 210:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 212:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 214:	c2 98       	cbi	0x18, 2	; 24
 216:	c9 01       	movw	r24, r18
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <lcd_init+0x40>
	lcd_command(0x80);
}

void lcd_command(char x)
{
 PORTA=x;
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB&~(1<<0);//RS=0;
 220:	c0 98       	cbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 222:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 224:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 226:	c2 98       	cbi	0x18, 2	; 24
 228:	c9 01       	movw	r24, r18
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <lcd_init+0x52>
	lcd_command(0x80);
}

void lcd_command(char x)
{
 PORTA=x;
 22e:	80 e8       	ldi	r24, 0x80	; 128
 230:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB&~(1<<0);//RS=0;
 232:	c0 98       	cbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 234:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 236:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 238:	c2 98       	cbi	0x18, 2	; 24
 23a:	c9 01       	movw	r24, r18
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <lcd_init+0x64>
	lcd_command(0x38);
	lcd_command(0x06);
	lcd_command(0x0E);
	lcd_command(0x01);
	lcd_command(0x80);
}
 240:	08 95       	ret

00000242 <main>:
void lcd_init(void );
void lcd_data(char );
void lcd_display(void );
int main()
{
  lcd_init();
 242:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_init>
  lcd_display();
 246:	0e 94 36 00 	call	0x6c	; 0x6c <lcd_display>
}
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	08 95       	ret

00000250 <lcd_command>:
	lcd_command(0x80);
}

void lcd_command(char x)
{
 PORTA=x;
 250:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB&~(1<<0);//RS=0;
 252:	c0 98       	cbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 254:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 256:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 258:	c2 98       	cbi	0x18, 2	; 24
 25a:	80 ed       	ldi	r24, 0xD0	; 208
 25c:	97 e0       	ldi	r25, 0x07	; 7
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	f1 f7       	brne	.-4      	; 0x25e <lcd_command+0xe>
 _delay_ms(1);
}
 262:	08 95       	ret

00000264 <lcd_data>:
void lcd_data(char x)
{
 PORTA=x;
 264:	8b bb       	out	0x1b, r24	; 27
 PORTB=PORTB |(1<<0);//RS=1;
 266:	c0 9a       	sbi	0x18, 0	; 24
 PORTB=PORTB&~(1<<1);//RW=0;
 268:	c1 98       	cbi	0x18, 1	; 24
 PORTB=PORTB |(1<<2);//EN=1;
 26a:	c2 9a       	sbi	0x18, 2	; 24
 PORTB=PORTB&~(1<<2);//EN=0;
 26c:	c2 98       	cbi	0x18, 2	; 24
 26e:	80 ed       	ldi	r24, 0xD0	; 208
 270:	97 e0       	ldi	r25, 0x07	; 7
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	f1 f7       	brne	.-4      	; 0x272 <lcd_data+0xe>
 _delay_ms(1);
}
 276:	08 95       	ret

00000278 <_exit>:
 278:	f8 94       	cli

0000027a <__stop_program>:
 27a:	ff cf       	rjmp	.-2      	; 0x27a <__stop_program>
