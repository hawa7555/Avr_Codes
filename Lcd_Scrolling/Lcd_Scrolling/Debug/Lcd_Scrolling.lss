
Lcd_Scrolling.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  000001ac  00000220  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000268  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000893  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000673  00000000  00000000  00000b77  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037a  00000000  00000000  000011ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00001564  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000360  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000025f  00000000  00000000  00001944  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001ba3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ea       	ldi	r30, 0xAC	; 172
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 cc 00 	call	0x198	; 0x198 <main>
  7a:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_cmd>:
#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>
void lcd_cmd(char x)
{
	PORTA=x&(0xF0);
  82:	98 2f       	mov	r25, r24
  84:	90 7f       	andi	r25, 0xF0	; 240
  86:	9b bb       	out	0x1b, r25	; 27
	PORTA=PORTA&~(1<<0);   //RS=0
  88:	d8 98       	cbi	0x1b, 0	; 27
	PORTA=PORTA&~(1<<1);   //RW=0
  8a:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA|(1<<2);    //EN=1
  8c:	da 9a       	sbi	0x1b, 2	; 27
	PORTA=PORTA&~(1<<2);   //EN=0
  8e:	da 98       	cbi	0x1b, 2	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  90:	ef ec       	ldi	r30, 0xCF	; 207
  92:	f7 e0       	ldi	r31, 0x07	; 7
  94:	31 97       	sbiw	r30, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <lcd_cmd+0x12>
  98:	00 c0       	rjmp	.+0      	; 0x9a <lcd_cmd+0x18>
  9a:	00 00       	nop
	_delay_ms(1);
	//lcd_cmd(x<<4);
	PORTA=(x<<4)&(0xF0);
  9c:	f0 e1       	ldi	r31, 0x10	; 16
  9e:	8f 9f       	mul	r24, r31
  a0:	c0 01       	movw	r24, r0
  a2:	11 24       	eor	r1, r1
  a4:	8b bb       	out	0x1b, r24	; 27
	PORTA=PORTA&~(1<<0);   //RS=0
  a6:	d8 98       	cbi	0x1b, 0	; 27
	PORTA=PORTA&~(1<<1);   //RW=0
  a8:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA|(1<<2);    //EN=1
  aa:	da 9a       	sbi	0x1b, 2	; 27
	PORTA=PORTA&~(1<<2);   //EN=0
  ac:	da 98       	cbi	0x1b, 2	; 27
  ae:	8f ec       	ldi	r24, 0xCF	; 207
  b0:	97 e0       	ldi	r25, 0x07	; 7
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <lcd_cmd+0x30>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <lcd_cmd+0x36>
  b8:	00 00       	nop
  ba:	08 95       	ret

000000bc <init>:
	_delay_ms(1);
}
void init()
{
	DDRA=0xFF;
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	8a bb       	out	0x1a, r24	; 26
	lcd_cmd(0x02);
  c0:	82 e0       	ldi	r24, 0x02	; 2
  c2:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
	lcd_cmd(0x28);
  c6:	88 e2       	ldi	r24, 0x28	; 40
  c8:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
	lcd_cmd(0x0E);
  cc:	8e e0       	ldi	r24, 0x0E	; 14
  ce:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
  d2:	08 95       	ret

000000d4 <lcd_data>:
	//lcd_cmd(0x06);
	//lcd_cmd(0x80);
}
void lcd_data(char x)
{
	PORTA=x&(0xF0);
  d4:	98 2f       	mov	r25, r24
  d6:	90 7f       	andi	r25, 0xF0	; 240
  d8:	9b bb       	out	0x1b, r25	; 27
	PORTA=PORTA|(1<<0);    //RS=1
  da:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA=PORTA&~(1<<1);   //RW=0
  dc:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA|(1<<2);    //EN=1
  de:	da 9a       	sbi	0x1b, 2	; 27
	PORTA=PORTA&~(1<<2);   //EN=0
  e0:	da 98       	cbi	0x1b, 2	; 27
  e2:	ef ec       	ldi	r30, 0xCF	; 207
  e4:	f7 e0       	ldi	r31, 0x07	; 7
  e6:	31 97       	sbiw	r30, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <lcd_data+0x12>
  ea:	00 c0       	rjmp	.+0      	; 0xec <lcd_data+0x18>
  ec:	00 00       	nop
	_delay_ms(1);
	//lcd_data(x<<4);
	PORTA=(x<<4)&(0xF0);
  ee:	f0 e1       	ldi	r31, 0x10	; 16
  f0:	8f 9f       	mul	r24, r31
  f2:	c0 01       	movw	r24, r0
  f4:	11 24       	eor	r1, r1
  f6:	8b bb       	out	0x1b, r24	; 27
	PORTA=PORTA|(1<<0);    //RS=1
  f8:	d8 9a       	sbi	0x1b, 0	; 27
	PORTA=PORTA&~(1<<1);   //RW=0
  fa:	d9 98       	cbi	0x1b, 1	; 27
	PORTA=PORTA|(1<<2);    //EN=1
  fc:	da 9a       	sbi	0x1b, 2	; 27
	PORTA=PORTA&~(1<<2);
  fe:	da 98       	cbi	0x1b, 2	; 27
 100:	8f ec       	ldi	r24, 0xCF	; 207
 102:	97 e0       	ldi	r25, 0x07	; 7
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <lcd_data+0x30>
 108:	00 c0       	rjmp	.+0      	; 0x10a <lcd_data+0x36>
 10a:	00 00       	nop
 10c:	08 95       	ret

0000010e <display>:
	_delay_ms(1);
}
void display()
{
 10e:	0f 93       	push	r16
 110:	1f 93       	push	r17
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
 11a:	68 97       	sbiw	r28, 0x18	; 24
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
	lcd_cmd(0x8F);
 126:	8f e8       	ldi	r24, 0x8F	; 143
 128:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
	char a[]="Birthdays are overrated";
 12c:	88 e1       	ldi	r24, 0x18	; 24
 12e:	e0 e6       	ldi	r30, 0x60	; 96
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	de 01       	movw	r26, r28
 134:	11 96       	adiw	r26, 0x01	; 1
 136:	01 90       	ld	r0, Z+
 138:	0d 92       	st	X+, r0
 13a:	8a 95       	dec	r24
 13c:	e1 f7       	brne	.-8      	; 0x136 <display+0x28>
	for(int i=0;a[i]!='\0';i++)
 13e:	89 81       	ldd	r24, Y+1	; 0x01
 140:	88 23       	and	r24, r24
 142:	b1 f0       	breq	.+44     	; 0x170 <display+0x62>
 144:	8e 01       	movw	r16, r28
 146:	0e 5f       	subi	r16, 0xFE	; 254
 148:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		//lcd_cmd(0x8F);
		lcd_data(a[i]);
 14a:	0e 94 6a 00 	call	0xd4	; 0xd4 <lcd_data>
 14e:	2f ef       	ldi	r18, 0xFF	; 255
 150:	82 e5       	ldi	r24, 0x52	; 82
 152:	97 e0       	ldi	r25, 0x07	; 7
 154:	21 50       	subi	r18, 0x01	; 1
 156:	80 40       	sbci	r24, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <display+0x46>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <display+0x50>
 15e:	00 00       	nop
		//lcd_cmd(0x06);
		_delay_ms(300);
		lcd_cmd(0x1C);
 160:	8c e1       	ldi	r24, 0x1C	; 28
 162:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
}
void display()
{
	lcd_cmd(0x8F);
	char a[]="Birthdays are overrated";
	for(int i=0;a[i]!='\0';i++)
 166:	f8 01       	movw	r30, r16
 168:	81 91       	ld	r24, Z+
 16a:	8f 01       	movw	r16, r30
 16c:	81 11       	cpse	r24, r1
 16e:	ed cf       	rjmp	.-38     	; 0x14a <display+0x3c>
 170:	ff ef       	ldi	r31, 0xFF	; 255
 172:	22 e5       	ldi	r18, 0x52	; 82
 174:	87 e0       	ldi	r24, 0x07	; 7
 176:	f1 50       	subi	r31, 0x01	; 1
 178:	20 40       	sbci	r18, 0x00	; 0
 17a:	80 40       	sbci	r24, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <display+0x68>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <display+0x72>
 180:	00 00       	nop
		_delay_ms(300);
		lcd_cmd(0x1C);
	}
	_delay_ms(300);
	
}
 182:	68 96       	adiw	r28, 0x18	; 24
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	f8 94       	cli
 188:	de bf       	out	0x3e, r29	; 62
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	08 95       	ret

00000198 <main>:
void main()
{
	init();
 198:	0e 94 5e 00 	call	0xbc	; 0xbc <init>
	while(1)
	{
		display();
 19c:	0e 94 87 00 	call	0x10e	; 0x10e <display>
		lcd_cmd(0x01);
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 41 00 	call	0x82	; 0x82 <lcd_cmd>
 1a6:	fa cf       	rjmp	.-12     	; 0x19c <main+0x4>

000001a8 <_exit>:
 1a8:	f8 94       	cli

000001aa <__stop_program>:
 1aa:	ff cf       	rjmp	.-2      	; 0x1aa <__stop_program>
